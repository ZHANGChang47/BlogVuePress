(window.webpackJsonp=window.webpackJsonp||[]).push([[59],{546:function(t,s,a){"use strict";a.r(s);var n=a(17),r=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"javascript"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#javascript"}},[t._v("#")]),t._v(" JavaScript")]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"_0、javascript-简介"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_0、javascript-简介"}},[t._v("#")]),t._v(" 0、JavaScript 简介")]),t._v(" "),a("h3",{attrs:{id:"_0-1、简史"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_0-1、简史"}},[t._v("#")]),t._v(" 0.1、简史")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("JavaScript 是由网景公司发明，起初命名为 LiveScript，后来由 于 SUN 公司的介入更名为了 JavaScript。")])]),t._v(" "),a("li",[a("p",[t._v("1996 年微软公司在其最新的 IE3 浏览器中引入了自己对 JavaScript 的实现 JScript。")])]),t._v(" "),a("li",[a("p",[t._v("于是在市面上存在两个版本的 JavaScript，一个网景公司的 JavaScript 和微软的 JScript。")])]),t._v(" "),a("li",[a("p",[t._v("为了确保不同的浏览器上运行的 JavaScript 标准一致，所以几 个公司共同定制了 JS 的标准名命名为 ECMAScript")])])]),t._v(" "),a("p",[a("img",{staticClass:"lazy",attrs:{alt:"image-20211117223943762","data-src":"https://typora001-zc.oss-cn-chengdu.aliyuncs.com/typoraImg/image-20211117223943762.png",loading:"lazy"}})]),t._v(" "),a("h3",{attrs:{id:"_0-2、实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_0-2、实现"}},[t._v("#")]),t._v(" 0.2、实现")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("ECMAScript 是一个标准，而这个标准需要由各个厂商去实现。")])]),t._v(" "),a("li",[a("p",[t._v("不同的浏览器厂商对该标准会有不同的实现。")])]),t._v(" "),a("li",[a("p",[t._v("我们已经知道 ECMAScript 是 JavaScript 标准，所以一般情况下 这两个词我们认为是一个意思。")])]),t._v(" "),a("li",[a("p",[t._v("但是实际上 JavaScript 的含义却要更大一些。")])])]),t._v(" "),a("p",[a("strong",[t._v("一个完整的 JavaScript 实现应该由以下三个部分构成")])]),t._v(" "),a("p",[a("img",{staticClass:"lazy",attrs:{alt:"image-20211117224019084","data-src":"https://typora001-zc.oss-cn-chengdu.aliyuncs.com/typoraImg/image-20211117224019084.png",loading:"lazy"}})]),t._v(" "),a("h3",{attrs:{id:"_0-3、javascript-的特点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_0-3、javascript-的特点"}},[t._v("#")]),t._v(" 0.3、JavaScript 的特点")]),t._v(" "),a("blockquote",[a("p",[t._v("解释型语言\t类似于 C 和 Java 的语法结构")]),t._v(" "),a("p",[t._v("动态语言\t\t基于原型的面向对象")])]),t._v(" "),a("h3",{attrs:{id:"_0-4、javascript-解释型语言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_0-4、javascript-解释型语言"}},[t._v("#")]),t._v(" 0.4、JavaScript 解释型语言")]),t._v(" "),a("blockquote",[a("p",[t._v("JavaScript 是一门解释型语言，所谓解释型值语言不需要被编译为机器码在执行，而是直接执行。**")]),t._v(" "),a("p",[t._v("由于少了编译这一步骤，所以解释型语言开发起来尤为轻松， 但是解释型语言运行较慢也是它的劣势。")]),t._v(" "),a("p",[t._v("不过解释型语言中使用了 JIT 技术，使得运行速度得以改善。")])]),t._v(" "),a("h3",{attrs:{id:"_0-5、javascript-动态语言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_0-5、javascript-动态语言"}},[t._v("#")]),t._v(" 0.5、JavaScript 动态语言")]),t._v(" "),a("blockquote",[a("p",[t._v("JavaScript 是一门动态语言，所谓的动态语言可以暂时理解为在语言中的一切内容都是不确定的。比如一个变量，这一时刻 是个整型，下一时刻可能会变成字符串了。当然这个问题我们以后再谈。")]),t._v(" "),a("p",[t._v("不过在补充一句动态语言相比静态语言性能上要差一些，不过由于 JavaScript 中应用的 JIT 技术，所以 JS 可能是运行速度最快 的动态语言了。")])]),t._v(" "),a("h2",{attrs:{id:"_1、javascript-基础语法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、javascript-基础语法"}},[t._v("#")]),t._v(" 1、JavaScript 基础语法")]),t._v(" "),a("h3",{attrs:{id:"_1-0、编写位置、注释、标识符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-0、编写位置、注释、标识符"}},[t._v("#")]),t._v(" 1.0、编写位置、注释、标识符")]),t._v(" "),a("h4",{attrs:{id:"_1-0-1、编写位置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-0-1、编写位置"}},[t._v("#")]),t._v(" 1.0.1、编写位置")]),t._v(" "),a("p",[t._v("JS 代码需要编写到脚本中")]),t._v(" "),a("h4",{attrs:{id:"_1-0-2、注释"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-0-2、注释"}},[t._v("#")]),t._v(" 1.0.2、注释")]),t._v(" "),a("p",[t._v("JS 中的注释和 Java 的的一致，分为两种：")]),t._v(" "),a("ul",[a("li",[t._v("单行注释：// 注释内容")]),t._v(" "),a("li",[t._v("多行注释：/ * 注释内容 */")])]),t._v(" "),a("h4",{attrs:{id:"_1-0-3、标识符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-0-3、标识符"}},[t._v("#")]),t._v(" 1.0.3、标识符")]),t._v(" "),a("p",[t._v("标识符规则与 java 中的也一致")]),t._v(" "),a("ul",[a("li",[t._v("– 第一个字符必须是一个字母、下划线（ _ ）或一个美元符号（ $ ）。")]),t._v(" "),a("li",[t._v("– 其他字符可以是字母、下划线、美元符号或数字。")])]),t._v(" "),a("p",[t._v("JavaScript 有以下标识符（部分与 java 相同）")]),t._v(" "),a("p",[a("strong",[t._v("关键字")])]),t._v(" "),a("p",[a("img",{staticClass:"lazy",attrs:{alt:"image-20211117224440441","data-src":"https://typora001-zc.oss-cn-chengdu.aliyuncs.com/typoraImg/image-20211117224440441.png",loading:"lazy"}})]),t._v(" "),a("p",[a("strong",[t._v("保留字")])]),t._v(" "),a("p",[a("img",{staticClass:"lazy",attrs:{alt:"image-20211117224522955","data-src":"https://typora001-zc.oss-cn-chengdu.aliyuncs.com/typoraImg/image-20211117224522955.png",loading:"lazy"}}),a("strong",[t._v("不建议使用的标识符")])]),t._v(" "),a("p",[a("img",{staticClass:"lazy",attrs:{alt:"image-20211117224611318","data-src":"https://typora001-zc.oss-cn-chengdu.aliyuncs.com/typoraImg/image-20211117224611318.png",loading:"lazy"}})]),t._v(" "),a("h3",{attrs:{id:"_1-1、变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1、变量"}},[t._v("#")]),t._v(" 1.1、变量")]),t._v(" "),a("p",[a("strong",[t._v("变量的作用:")])]),t._v(" "),a("p",[t._v("给某一个值或对象标注名称。")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("使用 var 声明变量")])]),t._v(" "),a("li",[a("p",[t._v("在 js 中可以不声明变量，就直接赋值使用。（但不建议）")])]),t._v(" "),a("li",[a("p",[t._v("变量严格区分大写小写")])])]),t._v(" "),a("h3",{attrs:{id:"_1-2、数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2、数据类型"}},[t._v("#")]),t._v(" 1.2、数据类型")]),t._v(" "),a("h4",{attrs:{id:"_1-2-1、5-种基本数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-1、5-种基本数据类型"}},[t._v("#")]),t._v(" 1.2.1、5 种基本数据类型")]),t._v(" "),a("p",[a("strong",[t._v("（1）字符串型（String）")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("JS 中的字符串需要使用引号引起来双引号或单引号都行")])]),t._v(" "),a("li",[a("p",[t._v("在字符串中使用\\作为转义字符")])]),t._v(" "),a("li",[a("ul",[a("li",[t._v("' ==> '")]),t._v(" "),a("li",[t._v('"==>"')])])]),t._v(" "),a("li",[a("ul",[a("li",[t._v("\\n ==> 换行")]),t._v(" "),a("li",[t._v("\\t ==> 制表符")])])]),t._v(" "),a("li",[a("ul",[a("li",[t._v("\\ ==> \\")])])]),t._v(" "),a("li",[a("p",[t._v('使用 typeof 运算符检查字符串时，会返回 "string"')])])]),t._v(" "),a("p",[a("strong",[t._v("（2）数值型（Number）")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("JS 中所有的整数和浮点数都是 Number 类型")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("特殊的数字")])])]),t._v(" "),a("li",[a("ul",[a("li",[t._v("Infinity 正无穷")]),t._v(" "),a("li",[t._v("-Infinity 负无穷")])])]),t._v(" "),a("li",[a("ul",[a("li",[t._v("NaN 非法数字（Not A Number）")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("其他进制的数字的表示：")])])]),t._v(" "),a("li",[a("ul",[a("li",[t._v("0b 开头表示二进制，但是不是所有的浏览器都支持")]),t._v(" "),a("li",[t._v("0 开头表示八进制")])])]),t._v(" "),a("li",[a("ul",[a("li",[t._v("0x 开头表示十六进制")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v('使用 typeof 检查一个 Number 类型的数据时，会返回 "number"（包括 NaN 和 Infinity）')])])])]),t._v(" "),a("p",[a("strong",[t._v("（3）布尔型（Boolean）")])]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 布尔值主要用来进行逻辑判断，布尔值只有两个\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" 逻辑的真\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v(" 逻辑的假\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 使用"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v("检查一个布尔值时，会返回"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"boolean"')]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("p",[a("strong",[t._v("（4）null 型（Null）")])]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 空值专门用来表示为空的对象，Null类型的值只有一个\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 使用"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v("检查一个Null类型的值时会返回"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"object"')]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("p",[a("strong",[t._v("（5）undefined 型（Undefined")]),t._v("）")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 如果声明一个变量但是没有为变量赋值此时变量的值就是"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 该类型的值只有一个 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 使用"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v("检查一个Undefined类型的值时，会返回"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"undefined"')]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("h4",{attrs:{id:"_1-2-2、object-对象-数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-2、object-对象-数据类型"}},[t._v("#")]),t._v(" 1.2.2、Object(对象) 数据类型")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("数组: typeof(arr) 结果是 object。 var arr = new Array( )")])]),t._v(" "),a("li",[a("p",[t._v("对象: object")])]),t._v(" "),a("li",[a("p",[t._v("函数:")])])]),t._v(" "),a("h4",{attrs:{id:"_1-2-3、数据类型转换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-3、数据类型转换"}},[t._v("#")]),t._v(" 1.2.3、数据类型转换")]),t._v(" "),a("p",[a("strong",[t._v("类型转换就是指将其他的数据类型，转换为 String Number 或 Boolean")])]),t._v(" "),a("h5",{attrs:{id:"_1-2-3-1、转换为-string"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-3-1、转换为-string"}},[t._v("#")]),t._v(" 1.2.3.1、转换为 String")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 方式一（强制类型转换）：\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 调用被转换数据的"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*toString()*/")]),t._v("方法\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 例子：\n\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\ta "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 注意：这个方法不适用于"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v("和"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("由于这两个类型的数据中没有方法，所以调用toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("时会报错\n\t\t\t\t\t\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 方式二（强制类型转换）：\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 调用"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* String()函数*/")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 例子：\n\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\ta "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 原理：对于Number Boolean "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("String都会调用他们的toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("方法来将其转换为字符串，\n\t\t对于"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v("值，直接转换为字符串"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"null"')]),t._v("。对于"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v("直接转换为字符串"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"undefined"')]),t._v("\n\t\t\t\t\t\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 方式三（隐式的类型转换）"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 为任意的数据类型 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 例子：\n\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\ta "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("原理：和String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("函数一样\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br")])]),a("h5",{attrs:{id:"_1-2-3-2、转换为-number"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-3-2、转换为-number"}},[t._v("#")]),t._v(" 1.2.3.2、转换为 Number")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 方式一（强制类型转换）：\n  \t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("调用Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("函数\n  \t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 例子：\n\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" s "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"123"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\ts "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 转换的情况：\n\t\t"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),t._v("字符串 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 数字\n  \t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 如果字符串是一个合法的数字，则直接转换为对应的数字\n  \t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 如果字符串是一个非法的数字，则转换为"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("NaN")]),t._v("\n  \t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 如果是一个空串或纯空格的字符串，则转换为"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.")]),t._v("布尔值 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 数字\n  \t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" 转换为 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n  \t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v(" 转换为 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.")]),t._v("空值 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 数字\n \t\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" 转换为 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4.")]),t._v("未定义 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 数字\n  \t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v(" 转换为"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("NaN")]),t._v("\n\t\t\t\t\t\t\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 方式二（强制类型转换）：\n        "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("调用parseInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("或parseFloat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 这两个函数专门用来将一个字符串转换为数字的\n        "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 可以将一个字符串中的有效的整数位提取出来，并转换为 Number\n        "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 例子：\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"123.456px"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\ta "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 123")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("如果需要可以在parseInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("中指定一个第二个参数，来指定进制\t\n\n  \t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseFloat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  \t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 可以将一个字符串中的有效的小数位提取出来，并转换为Number\n  \t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 例子：\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"123.456px"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\ta "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseFloat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//123.456")]),t._v("\n\t\t\t\t\t\t\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 方式三（隐式的类型转换）：\n\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 使用一元的"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("来进行隐式的类型转换\n\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 例子：\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"123"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\ta "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("原理：和Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("函数一样\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br"),a("span",{staticClass:"line-number"},[t._v("27")]),a("br"),a("span",{staticClass:"line-number"},[t._v("28")]),a("br"),a("span",{staticClass:"line-number"},[t._v("29")]),a("br"),a("span",{staticClass:"line-number"},[t._v("30")]),a("br"),a("span",{staticClass:"line-number"},[t._v("31")]),a("br"),a("span",{staticClass:"line-number"},[t._v("32")]),a("br"),a("span",{staticClass:"line-number"},[t._v("33")]),a("br"),a("span",{staticClass:"line-number"},[t._v("34")]),a("br"),a("span",{staticClass:"line-number"},[t._v("35")]),a("br"),a("span",{staticClass:"line-number"},[t._v("36")]),a("br"),a("span",{staticClass:"line-number"},[t._v("37")]),a("br"),a("span",{staticClass:"line-number"},[t._v("38")]),a("br"),a("span",{staticClass:"line-number"},[t._v("39")]),a("br"),a("span",{staticClass:"line-number"},[t._v("40")]),a("br"),a("span",{staticClass:"line-number"},[t._v("41")]),a("br")])]),a("h5",{attrs:{id:"_1-2-3-3、转换为布尔值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-3-3、转换为布尔值"}},[t._v("#")]),t._v(" 1.2.3.3、转换为布尔值")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 方式一（强制类型转换）：\n\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 使用 "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Boolean")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 函数\n\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 例子：\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" s "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"false"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\ts "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Boolean")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 转换的情况\n\t\t\t字符串 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 布尔\n  \t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 除了空串其余全是 "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n\n\t\t\t数值 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 布尔\n  \t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 除了"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("和"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("NaN")]),t._v("其余的全是 "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v("、"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 布尔\n  \t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 都是 "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n\n\t\t\t对象 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 布尔\n  \t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 都是 "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 方式二（隐式类型转换）：\t\n\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 为任意的数据类型做两次非运算，即可将其转换为布尔值\n\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 例子：\t\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\ta "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br")])]),a("h3",{attrs:{id:"_1-3、运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-3、运算符"}},[t._v("#")]),t._v(" 1.3、运算符")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 运算符也称为操作符\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 通过运算符可以对一个或多个值进行运算或操作\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v("运算符\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 用来检查一个变量的数据类型\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 语法："),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" 变量\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 它会返回一个用于描述类型的字符串作为结果\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])]),a("h4",{attrs:{id:"_1-3-1、算数运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-1、算数运算符"}},[t._v("#")]),t._v(" 1.3.1、算数运算符")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("\t对两个值进行加法运算并返回结果\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 对两个值进行减法运算并返回结果\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("\t对两个值进行乘法运算并返回结果\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("\t对两个值进行除法运算并返回结果\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v("\t对两个值进行取余运算并返回结果\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 除了加法以外，对非Number类型的值进行运算时，都会先转换为Number然后在做运算。\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 而做加法运算时，如果是两个字符串进行相加，则会做拼串操作，将两个字符连接为一个字符串。\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 任何值和字符串做加法，都会先转换为字符串，然后再拼串\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br")])]),a("h4",{attrs:{id:"_1-3-2、关系运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-2、关系运算符"}},[t._v("#")]),t._v(" 1.3.2、关系运算符")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 关系运算符用来比较两个值之间的大小关系的\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 关系运算符的规则和数学中一致，用来比较两个值之间的关系，\n\t如果关系成立则返回 "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" ，关系不成立则返回 "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v(" 。\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 如果比较的两个值是非数值，会将其转换为Number然后再比较。\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 如果比较的两个值都是字符串，此时会比较字符串的Unicode编码，而不会转换为Number。\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br")])]),a("h4",{attrs:{id:"_1-3-3、逻辑运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-3、逻辑运算符"}},[t._v("#")]),t._v(" 1.3.3、逻辑运算符")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 非运算可以对一个布尔值进行取反， "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" 变 "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v(" 变 "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 当对非布尔值使用"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("时，会先将其转换为布尔值然后再取反\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 我们可以利用"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("来将其他的数据类型转换为布尔值\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v("可以对符号两侧的值进行与运算\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 只有两端的值都为"),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("时，才会返回 "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" 。只要有一个"),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("就会返回"),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("。\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 与是一个短路的与，如果第一个值是"),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("，则不再检查第二个值\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 对于非布尔值，它会将其转换为布尔值然后做运算，并返回原值\n      "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 规则：\n      "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),t._v("如果第一个值为 "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v(" ，则返回第一个值\n      "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.")]),t._v("如果第一个值为 "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" ，则返回第二个值\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v("可以对符号两侧的值进行或运算\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 只有两端都是"),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("时，才会返回 "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v(" 。只要有一个"),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("，就会返回"),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("。\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 或是一个短路的或，如果第一个值是"),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("，则不再检查第二个值\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 对于非布尔值，它会将其转换为布尔值然后做运算，并返回原值\n      "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 规则：\t\n      "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),t._v("如果第一个值为 "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" ，则返回第一个值\n      "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.")]),t._v("如果第一个值为 "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v(" ，则返回第二个值\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br")])]),a("h4",{attrs:{id:"_1-3-4、相等运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-4、相等运算符"}},[t._v("#")]),t._v(" 1.3.4、相等运算符")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 相等，判断左右两个值是否相等，如果相等返回"),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("，如果不等返回"),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 相等会自动对两个值进行类型转换，如果对不同的类型进行比较，会将其转换为相同的类型然后再比较，\n\t  转换后相等它也会返回"),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 不等，判断左右两个值是否不等，如果不等则返回"),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("，如果相等则返回"),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 不等也会做自动的类型转换。\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 全等，判断左右两个值是否全等，它和相等类似，只不过它不会进行自动的类型转换，\n\t  如果两个值的类型不同，则直接返回"),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 不全等，和不等类似，但是它不会进行自动的类型转换，如果两个值的类型不同，它会直接返回"),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n\n特殊的值：\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v("和"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 由于"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v("衍生自"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v("，所以"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v(" 会返回"),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("。\n\t  但是 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v(" 会返回"),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("。\n\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("NaN")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("NaN")]),t._v("不与任何值相等，报告它自身 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("NaN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("NaN")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 判断一个值是否是"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("NaN")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("使用isNaN")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("函数\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br")])]),a("h4",{attrs:{id:"_1-3-5、三元-目-运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-5、三元-目-运算符"}},[t._v("#")]),t._v(" 1.3.5、三元 (目) 运算符")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 语法：条件表达式"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v("语句"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("语句"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 执行流程：\n\t\t先对条件表达式求值判断，\n\t\t\t如果判断结果为"),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("，则执行语句"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("，并返回执行结果\n\t\t\t如果判断结果为"),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("，则执行语句"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("，并返回执行结果\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])]),a("h4",{attrs:{id:"_1-3-6、一元运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-6、一元运算符"}},[t._v("#")]),t._v(" 1.3.6、一元运算符")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 一元运算符只需要一个操作数\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 一元的"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("\n\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 就是正号，不会对值产生任何影响，但是可以将一个非数字转换为数字\n\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 例子：\n\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t\t\ta "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t\t\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 一元的"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("\n\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 就是负号，可以对一个数字进行符号位取反\n\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 例子：\n\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t\t\ta "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t\t\t\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 自增\n\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 自增可以使变量在原值的基础上自增"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 自增使用 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("\n\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 自增可以使用 前"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("（"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("a）后"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 无论是"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("a 还是 a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("都会立即使原变量自增"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n\t\t\t\t\t不同的是"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("a和a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("的值是不同的，\n\t\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("a的值是变量的新值（自增后的值）\n\t\t\t\t\t\ta"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("的值是变量的原值（自增前的值）\n\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 自减\t\n\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 自减可以使变量在原值的基础上自减"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 自减使用 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("\n\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 自减可以使用 前"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("（"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("a）后"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 无论是"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("a 还是 a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("都会立即使原变量自减"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n\t\t\t\t\t不同的是"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("a和a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("的值是不同的，\n\t\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("a的值是变量的新值（自减后的值）\n\t\t\t\t\t\ta"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("的值是变量的原值（自减前的值）\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br"),a("span",{staticClass:"line-number"},[t._v("27")]),a("br"),a("span",{staticClass:"line-number"},[t._v("28")]),a("br"),a("span",{staticClass:"line-number"},[t._v("29")]),a("br"),a("span",{staticClass:"line-number"},[t._v("30")]),a("br")])]),a("h4",{attrs:{id:"_1-3-7、赋值运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-7、赋值运算符"}},[t._v("#")]),t._v(" 1.3.7、赋值运算符")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" \n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 可以将符号右侧的值赋值给左侧变量\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" 相当于 a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  str "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"world"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-=")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("  相当于 a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*=")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" 相当于 a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/=")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" 相当于 a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("\t\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%=")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" 相当于 a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br")])]),a("h4",{attrs:{id:"_1-3-8、优先级问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-8、优先级问题"}},[t._v("#")]),t._v(" 1.3.8、优先级问题")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 和数学中一样，"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JS")]),t._v("中的运算符也是具有优先级的，\n  比如 先乘除后加减，先与后或\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 具体的优先级可以参考优先级的表格，在表格中越靠上的优先级越高，\n  优先级越高的越优先计算，优先级相同的，从左往右计算。\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("优先级不需要记忆，如果越到拿不准的，使用")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("来改变优先级。\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("p",[a("img",{staticClass:"lazy",attrs:{alt:"image-20211117225824506","data-src":"https://typora001-zc.oss-cn-chengdu.aliyuncs.com/typoraImg/image-20211117225824506.png",loading:"lazy"}})]),t._v(" "),a("h3",{attrs:{id:"_1-4、流程控制语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-4、流程控制语句"}},[t._v("#")]),t._v(" 1.4、流程控制语句")]),t._v(" "),a("h4",{attrs:{id:"_1-4-1、概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-1、概念"}},[t._v("#")]),t._v(" 1.4.1、概念")]),t._v(" "),a("p",[t._v("程序都是自上向下的顺序执行的，通过流程控制语句可以改变程序执行的顺序，或者反复的执行某一段的程序。")]),t._v(" "),a("h4",{attrs:{id:"_1-4-2、分类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-2、分类"}},[t._v("#")]),t._v(" 1.4.2、分类")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("条件判断语句")])]),t._v(" "),a("li",[a("p",[t._v("条件分支语句")])]),t._v(" "),a("li",[a("p",[t._v("循环语句")])])]),t._v(" "),a("h5",{attrs:{id:"_1-4-2-1、条件判断语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-2-1、条件判断语句"}},[t._v("#")]),t._v(" 1.4.2.1、条件判断语句")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 条件判断语句也称为"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v("语句\n\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 语法一：\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("条件表达式"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\t语句"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t\t\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 执行流程：\n\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v("语句执行时，会先对条件表达式进行求值判断，\n\t\t\t\t\t如果值为"),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("，则执行"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v("后的语句\n\t\t\t\t\t如果值为"),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("，则不执行\n\t\t\n\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 语法二：\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("条件表达式"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\t语句"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\t语句"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t\t\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 执行流程：\n\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v("语句执行时，会对条件表达式进行求值判断，\n\t\t\t\t\t如果值为"),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("，则执行"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v("后的语句\n\t\t\t\t\t如果值为"),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("，则执行"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v("后的语句\n\t\t\t\n\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 语法三：\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("条件表达式"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\t语句"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("条件表达式"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\t语句"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("条件表达式"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\t语句"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("条件表达式"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\t语句"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\t语句"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t\t\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 执行流程\n\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v("语句执行时，会自上至下依次对条件表达式进行求值判断，\n\t\t\t\t\t如果判断结果为"),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("，则执行当前"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v("后的语句，执行完成后语句结束。\n\t\t\t\t\t如果判断结果为"),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("，则继续向下判断，直到找到为"),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("的为止。\n\t\t\t\t\t如果所有的条件表达式都是"),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("，则执行"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v("后的语句\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br"),a("span",{staticClass:"line-number"},[t._v("27")]),a("br"),a("span",{staticClass:"line-number"},[t._v("28")]),a("br"),a("span",{staticClass:"line-number"},[t._v("29")]),a("br"),a("span",{staticClass:"line-number"},[t._v("30")]),a("br"),a("span",{staticClass:"line-number"},[t._v("31")]),a("br"),a("span",{staticClass:"line-number"},[t._v("32")]),a("br"),a("span",{staticClass:"line-number"},[t._v("33")]),a("br"),a("span",{staticClass:"line-number"},[t._v("34")]),a("br"),a("span",{staticClass:"line-number"},[t._v("35")]),a("br"),a("span",{staticClass:"line-number"},[t._v("36")]),a("br"),a("span",{staticClass:"line-number"},[t._v("37")]),a("br"),a("span",{staticClass:"line-number"},[t._v("38")]),a("br"),a("span",{staticClass:"line-number"},[t._v("39")]),a("br"),a("span",{staticClass:"line-number"},[t._v("40")]),a("br"),a("span",{staticClass:"line-number"},[t._v("41")]),a("br")])]),a("h5",{attrs:{id:"_1-4-2-2、条件分支语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-2-2、条件分支语句"}},[t._v("#")]),t._v(" 1.4.2.2、条件分支语句")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("switch")]),t._v("语句\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 语法"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("switch")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("条件表达式"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("表达式")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n\t\t\t\t语句"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("表达式")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n\t\t\t\t语句"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("表达式")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n\t\t\t\t语句"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n\t\t\t\t语句"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 执行流程：\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("switch")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("语句在执行时，会依次将"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v("后的表达式的值和"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("switch")]),t._v("后的表达式的值进行全等比较，\n\t\t\t如果比较结果为"),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("，则继续向下比较。如果比较结果为"),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("，则从当前"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v("处开始向下执行代码。\n\t\t\t如果所有的"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v("判断结果都为"),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("，则从"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v("处开始执行代码。\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br")])]),a("h5",{attrs:{id:"_1-4-2-3、循环语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-2-3、循环语句"}},[t._v("#")]),t._v(" 1.4.2.3、循环语句")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 通过循环语句可以反复执行某些语句多次\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v("循环\n\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 语法：\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("条件表达式"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\t语句"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t\t\n\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 执行流程：\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v("语句在执行时，会先对条件表达式进行求值判断，\n\t\t\t\t如果判断结果为"),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("，则终止循环\n\t\t\t\t如果判断结果为"),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("，则执行循环体\n\t\t\t\t循环体执行完毕，继续对条件表达式进行求值判断，依此类推\n\t\t\t\t\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v("循环\n\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 语法"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\t语句"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("条件表达式"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\t\n\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 执行流程\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v("在执行时，会先执行"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v("后的循环体，然后在对条件表达式进行判断，\n\t\t\t\t如果判断判断结果为"),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("，则终止循环。\n\t\t\t\t如果判断结果为"),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("，则继续执行循环体，依此类推\n\t\t\t\t\n\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 和"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v("的区别：\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v("：先判断后执行\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 先执行后判断\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v("可以确保循环体至少执行一次。\n\t\t\t\n\t\t\t\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v("循环\n\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 语法：\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("①初始化表达式 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" ②条件表达式 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" ④更新表达式"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\t③语句"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 执行流程：\n\t\t\t首先执行①初始化表达式，初始化一个变量，\n\t\t\t然后对②条件表达式进行求值判断，如果为"),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("则终止循环\n\t\t\t如果判断结果为"),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("，则执行③循环体\n\t\t\t循环体执行完毕，执行④更新表达式，对变量进行更新。\n\t\t\t更新表达式执行完毕重复②\n\t\t\t\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 死循环\n\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\n\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t\n\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\n\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br"),a("span",{staticClass:"line-number"},[t._v("27")]),a("br"),a("span",{staticClass:"line-number"},[t._v("28")]),a("br"),a("span",{staticClass:"line-number"},[t._v("29")]),a("br"),a("span",{staticClass:"line-number"},[t._v("30")]),a("br"),a("span",{staticClass:"line-number"},[t._v("31")]),a("br"),a("span",{staticClass:"line-number"},[t._v("32")]),a("br"),a("span",{staticClass:"line-number"},[t._v("33")]),a("br"),a("span",{staticClass:"line-number"},[t._v("34")]),a("br"),a("span",{staticClass:"line-number"},[t._v("35")]),a("br"),a("span",{staticClass:"line-number"},[t._v("36")]),a("br"),a("span",{staticClass:"line-number"},[t._v("37")]),a("br"),a("span",{staticClass:"line-number"},[t._v("38")]),a("br"),a("span",{staticClass:"line-number"},[t._v("39")]),a("br"),a("span",{staticClass:"line-number"},[t._v("40")]),a("br"),a("span",{staticClass:"line-number"},[t._v("41")]),a("br"),a("span",{staticClass:"line-number"},[t._v("42")]),a("br"),a("span",{staticClass:"line-number"},[t._v("43")]),a("br"),a("span",{staticClass:"line-number"},[t._v("44")]),a("br"),a("span",{staticClass:"line-number"},[t._v("45")]),a("br"),a("span",{staticClass:"line-number"},[t._v("46")]),a("br"),a("span",{staticClass:"line-number"},[t._v("47")]),a("br"),a("span",{staticClass:"line-number"},[t._v("48")]),a("br"),a("span",{staticClass:"line-number"},[t._v("49")]),a("br"),a("span",{staticClass:"line-number"},[t._v("50")]),a("br")])]),a("h2",{attrs:{id:"_2、对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、对象"}},[t._v("#")]),t._v(" 2、对象")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("对象是 JS 中的引用数据类型")])]),t._v(" "),a("li",[a("p",[t._v("对象是一种复合数据类型，在对象中可以保存多个不同数据类型的属性")])]),t._v(" "),a("li",[a("p",[t._v("使用 typeof 检查一个对象时，会返回 object")])])]),t._v(" "),a("h3",{attrs:{id:"_2-1、创建对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1、创建对象"}},[t._v("#")]),t._v(" 2.1、创建对象")]),t._v(" "),a("p",[t._v("方式一：")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("var obj = new Object();")])])]),t._v(" "),a("p",[t._v("方式二：")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("var obj = {};")])])]),t._v(" "),a("h3",{attrs:{id:"_2-2、向对象中添加属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2、向对象中添加属性"}},[t._v("#")]),t._v(" 2.2、向对象中添加属性")]),t._v(" "),a("p",[t._v("语法：\n"),a("strong",[t._v("对象. 属性名 = 属性值;")]),t._v('\n对象["属性名"] = 属性值;')]),t._v(" "),a("ul",[a("li",[a("ul",[a("li",[t._v("对象的属性名没有任何要求，不需要遵守标识符的规范，\n但是在开发中，尽量按照标识符的要求去写。")]),t._v(" "),a("li",[t._v("属性值也可以任意的数据类型。")])])])]),t._v(" "),a("h3",{attrs:{id:"_2-3、读取对象中的属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-3、读取对象中的属性"}},[t._v("#")]),t._v(" 2.3、读取对象中的属性")]),t._v(" "),a("p",[t._v("语法：")]),t._v(" "),a("p",[a("strong",[t._v("对象. 属性名")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v('对象["属性名"]\n')])])]),a("ul",[a("li",[t._v("如果读取一个对象中没有的属性，它不会报错，而是返回一个 undefined")])]),t._v(" "),a("h3",{attrs:{id:"_2-4、删除对象中的属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-4、删除对象中的属性"}},[t._v("#")]),t._v(" 2.4、删除对象中的属性")]),t._v(" "),a("p",[t._v("语法：")]),t._v(" "),a("p",[a("strong",[t._v("delete 对象. 属性名")])]),t._v(" "),a("p",[t._v('delete 对象["属性名"]')]),t._v(" "),a("h3",{attrs:{id:"_2-5、使用-in-检查对象中是否含有指定属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-5、使用-in-检查对象中是否含有指定属性"}},[t._v("#")]),t._v(" 2.5、使用 in 检查对象中是否含有指定属性")]),t._v(" "),a("p",[t._v("语法：")]),t._v(" "),a("p",[a("strong",[t._v('"属性名" in 对象')])]),t._v(" "),a("p",[t._v("如果在对象中含有该属性，则返回 true")]),t._v(" "),a("p",[t._v("如果没有则返回 false")]),t._v(" "),a("h3",{attrs:{id:"_2-6、使用对象字面量-在创建对象时直接向对象中添加属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-6、使用对象字面量-在创建对象时直接向对象中添加属性"}},[t._v("#")]),t._v(" 2.6、使用对象字面量，在创建对象时直接向对象中添加属性")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\t\t\t\t\n\t\t"),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("属性名")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("属性值"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("属性名")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("属性值"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("属性名")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("属性值"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("属性名")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("属性值\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])]),a("h3",{attrs:{id:"_2-7、基本数据类型和引用数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-7、基本数据类型和引用数据类型"}},[t._v("#")]),t._v(" 2.7、基本数据类型和引用数据类型")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 基本数据类型\n\t\tString Number Boolean Null Undefined\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 引用数据类型\n\t\tObject\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 基本数据类型的数据，变量是直接保存的它的值。\n\t变量与变量之间是互相独立的，修改一个变量不会影响其他的变量。\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 引用数据类型的数据，变量是保存的对象的引用（内存地址）。\n\t如果多个变量指向的是同一个对象，此时修改一个变量的属性，会影响其他的变量。\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 比较两个变量时，对于基本数据类型，比较的就是值，\n\t对于引用数据类型比较的是地址，地址相同才相同\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br")])]),a("h2",{attrs:{id:"_3、函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、函数"}},[t._v("#")]),t._v(" 3、函数")]),t._v(" "),a("h4",{attrs:{id:"_3-1、函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1、函数"}},[t._v("#")]),t._v(" 3.1、函数")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("函数也是一个对象，也具有普通对象的功能")])]),t._v(" "),a("li",[a("p",[t._v("函数中可以封装一些代码，在需要的时候可以去调用函数来执行这些代码")])]),t._v(" "),a("li",[a("p",[t._v("使用typeof检查一个函数时会返回function")])])]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("\t"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("、创建函数\n\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 函数声明\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("函数名")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("形参"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("形参"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("形参"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("N")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\t语句"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t\n\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 函数表达式\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("函数名")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("形参"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("形参"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("形参"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("N")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\t语句"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t\n\t"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("、调用函数\n\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("语法：函数对象")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("实参"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("实参"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("实参"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("N")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fun")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sum")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 当我们调用函数时，函数中封装的代码会按照编写的顺序执行\n\n\t"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("、形参和实参\n\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 形参：形式参数\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("定义函数时，可以在")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("中定义一个或多个形参，形参之间使用"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("隔开\n\t\t\t\t定义形参就相当于在函数内声明了对应的变量但是并不赋值，形参会在调用时才赋值。\n\t\t\t\t\n\t"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("、实参：实际参数\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("调用函数时，可以在")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("传递实参，传递的实参会赋值给对应的形参"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t\t\t调用函数时"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JS")]),t._v("解析器不会检查实参的类型和个数，可以传递任意数据类型的值。\n\t\t\t\t如果实参的数量大于形参，多余实参将不会赋值，\n\t\t\t\t如果实参的数量小于形参，则没有对应实参的形参将会赋值"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v("\n        \n  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("、返回值，就是函数执行的结果。\n\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 使用 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" 来设置函数的返回值。\n\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 语法： "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" 值"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t该值就会成为函数的返回值，可以通过一个变量来接收返回值\n\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v("后边的代码都不会执行，一旦执行到"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v("语句时，函数将会立刻退出。\n\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v("后可以跟任意类型的值，可以是基本数据类型，也可以是一个对象。\n\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 如果"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v("后不跟值，或者是不写"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v("则函数默认返回"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v("。\n        \n\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),t._v("、"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("continue")]),t._v("和"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),t._v("\n\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 退出循环\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("continue")]),t._v("\n\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 跳过当次循环\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v("\n\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 退出函数\n\t\t\t\t\n\t"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v("、参数，函数的实参也可以是任意的数据类型。\n\n\t"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),t._v("、方法（method）\n\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 可以将一个函数设置为一个对象的属性，\n\t\t\t当一个对象的属性是一个函数时，\n\t\t\t\t我们称这个函数是该对象的方法。\n\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 对象"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("方法名")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("函数名")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        \n  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v("、函数\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("apply")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 这两个方法都是函数对象的方法需要通过函数对象来调用\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 通过两个方法可以直接调用函数，并且可以通过第一个实参来指定函数中"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 不同的是call是直接传递函数的实参而apply需要将实参封装到一个数组中传递\n\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" arguments\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" arguments和"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),t._v("类似，都是函数中的隐含的参数\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" arguments是一个类数组元素，它用来封装函数执行过程中的实参\n\t\t\t\t所以即使不定义形参，也可以通过arguments来使用实参\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" arguments中有一个属性callee表示当前执行的函数对象\n\t\t\n\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),t._v("是函数的上下文对象，根据函数的调用方式不同会执向不同的对象\n\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),t._v("以函数的形式调用时， "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),t._v(" 是 window\n\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.")]),t._v("以方法的形式调用时， "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),t._v(" 是调用方法的对象\n\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.")]),t._v("以构造函数的形式调用时， "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),t._v(" 是新建的那个对象\n\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4.")]),t._v("使用call和apply调用时， "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),t._v(" 是指定的那个对象\n\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5.")]),t._v("在全局作用域中"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),t._v("代表window\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br"),a("span",{staticClass:"line-number"},[t._v("27")]),a("br"),a("span",{staticClass:"line-number"},[t._v("28")]),a("br"),a("span",{staticClass:"line-number"},[t._v("29")]),a("br"),a("span",{staticClass:"line-number"},[t._v("30")]),a("br"),a("span",{staticClass:"line-number"},[t._v("31")]),a("br"),a("span",{staticClass:"line-number"},[t._v("32")]),a("br"),a("span",{staticClass:"line-number"},[t._v("33")]),a("br"),a("span",{staticClass:"line-number"},[t._v("34")]),a("br"),a("span",{staticClass:"line-number"},[t._v("35")]),a("br"),a("span",{staticClass:"line-number"},[t._v("36")]),a("br"),a("span",{staticClass:"line-number"},[t._v("37")]),a("br"),a("span",{staticClass:"line-number"},[t._v("38")]),a("br"),a("span",{staticClass:"line-number"},[t._v("39")]),a("br"),a("span",{staticClass:"line-number"},[t._v("40")]),a("br"),a("span",{staticClass:"line-number"},[t._v("41")]),a("br"),a("span",{staticClass:"line-number"},[t._v("42")]),a("br"),a("span",{staticClass:"line-number"},[t._v("43")]),a("br"),a("span",{staticClass:"line-number"},[t._v("44")]),a("br"),a("span",{staticClass:"line-number"},[t._v("45")]),a("br"),a("span",{staticClass:"line-number"},[t._v("46")]),a("br"),a("span",{staticClass:"line-number"},[t._v("47")]),a("br"),a("span",{staticClass:"line-number"},[t._v("48")]),a("br"),a("span",{staticClass:"line-number"},[t._v("49")]),a("br"),a("span",{staticClass:"line-number"},[t._v("50")]),a("br"),a("span",{staticClass:"line-number"},[t._v("51")]),a("br"),a("span",{staticClass:"line-number"},[t._v("52")]),a("br"),a("span",{staticClass:"line-number"},[t._v("53")]),a("br"),a("span",{staticClass:"line-number"},[t._v("54")]),a("br"),a("span",{staticClass:"line-number"},[t._v("55")]),a("br"),a("span",{staticClass:"line-number"},[t._v("56")]),a("br"),a("span",{staticClass:"line-number"},[t._v("57")]),a("br"),a("span",{staticClass:"line-number"},[t._v("58")]),a("br"),a("span",{staticClass:"line-number"},[t._v("59")]),a("br"),a("span",{staticClass:"line-number"},[t._v("60")]),a("br"),a("span",{staticClass:"line-number"},[t._v("61")]),a("br"),a("span",{staticClass:"line-number"},[t._v("62")]),a("br"),a("span",{staticClass:"line-number"},[t._v("63")]),a("br"),a("span",{staticClass:"line-number"},[t._v("64")]),a("br"),a("span",{staticClass:"line-number"},[t._v("65")]),a("br"),a("span",{staticClass:"line-number"},[t._v("66")]),a("br"),a("span",{staticClass:"line-number"},[t._v("67")]),a("br"),a("span",{staticClass:"line-number"},[t._v("68")]),a("br"),a("span",{staticClass:"line-number"},[t._v("69")]),a("br"),a("span",{staticClass:"line-number"},[t._v("70")]),a("br"),a("span",{staticClass:"line-number"},[t._v("71")]),a("br")])]),a("h4",{attrs:{id:"_3-2、作用域-变量、函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2、作用域-变量、函数"}},[t._v("#")]),t._v(" 3.2、作用域（变量、函数）")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 作用域简单来说就是一个变量的作用范围。\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 在"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JS")]),t._v("中作用域分成两种：\n\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),t._v("全局作用域\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 直接在script标签中编写的代码都运行在全局作用域中\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 全局作用域在打开页面时创建，在页面关闭时销毁。\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 全局作用域中有一个全局对象window，window对象由浏览器提供，\n    \t可以在页面中直接使用，它代表的是整个的浏览器的窗口。\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 在全局作用域中创建的变量都会作为window对象的属性保存\n    \t在全局作用域中创建的函数都会作为window对象的方法保存\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 在全局作用域中创建的变量和函数可以在页面的任意位置访问。\n    \t在函数作用域中也可以访问到全局作用域的变量。\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 尽量不要在全局中创建变量\t\n\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.")]),t._v("函数作用域\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 函数作用域是函数执行时创建的作用域，每次调用函数都会创建一个新的函数作用域。\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 函数作用域在函数执行时创建，在函数执行结束时销毁。\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 在函数作用域中创建的变量，不能在全局中访问。\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 当在函数作用域中使用一个变量时，它会先在自身作用域中寻找，\n    \t如果找到了则直接使用，如果没有找到则到上一级作用域中寻找，\n    \t如果找到了则使用，找不到则继续向上找，一直会\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 变量的声明提前\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 在全局作用域中，使用"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v("关键字声明的变量会在所有的代码执行之前被声明，但是不会赋值。\n\t\t所以我们可以在变量声明前使用变量。但是不使用"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v("关键字声明的变量不会被声明提前。\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 在函数作用域中，也具有该特性，使用"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v("关键字声明的变量会在函数所有的代码执行前被声明，\n\t\t如果没有使用 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" 关键字声明变量，则变量会变成全局变量\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 函数的声明提前\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 在全局作用域中，使用函数声明创建的函数（"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fun")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("）"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("会在所有的代码执行之前被创建，\n\t\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("也就是我们可以在函数声明前去调用函数，但是使用函数表达式")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("fun")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("创建的函数没\t\t\t有该特性\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 在函数作用域中，使用函数声明创建的函数，会在所有的函数中的代码执行之前就被创建好了。\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br"),a("span",{staticClass:"line-number"},[t._v("27")]),a("br"),a("span",{staticClass:"line-number"},[t._v("28")]),a("br"),a("span",{staticClass:"line-number"},[t._v("29")]),a("br"),a("span",{staticClass:"line-number"},[t._v("30")]),a("br"),a("span",{staticClass:"line-number"},[t._v("31")]),a("br"),a("span",{staticClass:"line-number"},[t._v("32")]),a("br")])]),a("h4",{attrs:{id:"_3-3、this-上下文对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-3、this-上下文对象"}},[t._v("#")]),t._v(" 3.3、this（上下文对象）")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 我们每次调用函数时，解析器都会将一个上下文对象作为隐含的参数传递进函数。\n\t\t使用"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),t._v("来引用上下文对象，根据函数的调用形式不同，"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),t._v("的值也不同。\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),t._v("的不同的情况：\n\t\t"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),t._v("以函数的形式调用时，"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),t._v("是window\n\t\t"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.")]),t._v("以方法的形式调用时，"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),t._v("就是调用方法的对象\n\t\t"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.")]),t._v("以构造函数的形式调用时，"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),t._v("就是新创建的对\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])]),a("h4",{attrs:{id:"_3-4、构造函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-4、构造函数"}},[t._v("#")]),t._v(" 3.4、构造函数")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 构造函数是专门用来创建对象的函数\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 一个构造函数我们也可以称为一个类\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 通过一个构造函数创建的对象，我们称该对象时这个构造函数的实例\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 通过同一个构造函数创建的对象，我们称为一类对象\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 构造函数就是一个普通的函数，只是他的调用方式不同，\n\t\t如果直接调用，它就是一个普通函数\n\t\t如果使用"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v("来调用，则它就是一个构造函数\n\t\t\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 例子：\n\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Person")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\n\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 构造函数的执行流程：\n\t\t"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),t._v("创建一个新的对象\n\t\t"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.")]),t._v("将新的对象作为函数的上下文对象（"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),t._v("）\n\t\t"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.")]),t._v("执行函数中的代码\n\t\t"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4.")]),t._v("将新建的对象返回\n\t\t\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" 用来检查一个对象是否是一个类的实例\n\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 语法：对象 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" 构造函数\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 如果该对象时构造函数的实例，则返回"),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("，否则返回"),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" Object是所有对象的祖先，所以任何对象和Object做"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v("都会返回"),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n\t\t\t\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 枚举对象中的属性\n\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v("\n\t\t语法：\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" 属性名 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" 对象"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t\t\n\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v("语句的循环体会执行多次，对象中有几个属性就会执行几次，\n\t\t\t每次讲一个属性名赋值给我们定义的变量，我们可以通过它来获取对象中的属性\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br"),a("span",{staticClass:"line-number"},[t._v("27")]),a("br"),a("span",{staticClass:"line-number"},[t._v("28")]),a("br"),a("span",{staticClass:"line-number"},[t._v("29")]),a("br"),a("span",{staticClass:"line-number"},[t._v("30")]),a("br"),a("span",{staticClass:"line-number"},[t._v("31")]),a("br"),a("span",{staticClass:"line-number"},[t._v("32")]),a("br"),a("span",{staticClass:"line-number"},[t._v("33")]),a("br")])]),a("h4",{attrs:{id:"_3-5、原型-prototype"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-5、原型-prototype"}},[t._v("#")]),t._v(" 3.5、原型（prototype）")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 创建一个函数以后，解析器都会默认在函数中添加一个数prototype\n\tprototype属性指向的是一个对象，这个对象我们称为原型对象。\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 当函数作为构造函数使用，它所创建的对象中都会有一个隐含的属性执行该原型对象。\n    这个隐含的属性可以通过对象"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__proto__来访问。\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 原型对象就相当于一个公共的区域，凡是通过同一个构造函数创建的对象他们通常都可以访问到相同的原型对象。\n    我们可以将对象中共有的属性和方法统一添加到原型对象中，\n    这样我们只需要添加一次，就可以使所有的对象都可以使用。\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 当我们去访问对象的一个属性或调用对象的一个方法时，它会先自身中寻找，\n    如果在自身中找到了，则直接使用。\n    如果没有找到，则去原型对象中寻找，如果找到了则使用，\n    如果没有找到，则去原型的原型中寻找，依此类推。直到找到Object的原型为止，Object的原型的原型为"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v("，\n    如果依然没有找到则返回"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasOwnProperty")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 这个方法可以用来检查对象自身中是否含有某个属性\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 语法：对象"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasOwnProperty")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"属性名"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br")])]),a("h2",{attrs:{id:"_4、数组"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4、数组"}},[t._v("#")]),t._v(" 4、数组")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 数组也是一个对象，是一个用来存储数据的对象\n\t\t和Object类似，但是它的存储效率比普通对象要高\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 数组中保存的内容我们称为元素\t\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 数组使用索引（index）来操作元素\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 索引指由"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("开始的整数\n\t一、数组的操作：\n\t\t"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("、创建数组\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" arr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Array")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" arr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t\n\t\t"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("、向数组中添加元素\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 语法；\n\t\t\t\t数组对象"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("索引"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" 值"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t\tarr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t\tarr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t\t\n\t\t"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("、创建数组时直接添加元素\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 语法：\n\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" arr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("元素"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("元素"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("元素"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("N")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 例子：\n\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" arr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t\t\t\n\t\t"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("、获取和修改数组的长度\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 使用length属性来操作数组的长度\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 获取长度：\n\t\t\t\t数组"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length\n\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" length获取到的是数组的最大索引"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 对于连续的数组，length获取到的就是数组中元素的个数\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 修改数组的长度\n\t\t\t\t数组"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" 新长度\n\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 如果修改后的length大于原长度，则多出的部分会空出来\n\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 如果修改后的length小于原长度，则原数组中多出的元素会被删除\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 向数组的最后添加元素\n\t\t\t\t数组"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("数组"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" 值"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t\t\n\t二、数组的方法\n\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 用来向数组的末尾添加一个或多个元素，并返回数组新的长度\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 语法：数组"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("元素"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("元素"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("元素"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("N")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("pop")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 用来删除数组的最后一个元素，并返回被删除的元素\n\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("unshift")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 向数组的前边添加一个或多个元素，并返回数组的新的长度\n\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("shift")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 删除数组的前边的一个元素，并返回被删除的元素\n\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("slice")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 可以从一个数组中截取指定的元素\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 该方法不会影响原数组，而是将截取到的内容封装为一个新的数组并返回\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 参数：\n\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),t._v("截取开始位置的索引（包括开始位置）\n\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.")]),t._v("截取结束位置的索引（不包括结束位置）\n\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 第二个参数可以省略不写，如果不写则一直截取到最后\n\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 参数可以传递一个负值，如果是负值，则从后往前数\n\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("splice")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 可以用来删除数组中指定元素，并使用新的元素替换\n\t\t\t\t该方法会将删除的元素封装到新数组中返回\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 参数：\n\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),t._v("删除开始位置的索引\n\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.")]),t._v("删除的个数\n\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.")]),t._v("三个以后，都是替换的元素，这些元素将会插入到开始位置索引的前边\n         "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("reverse")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 可以用来反转一个数组，它会对原数组产生影响\n\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("concat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 可以连接两个或多个数组，它不会影响原数组，而是新数组作为返回值返回\n\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("join")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 可以将一个数组转换为一个字符串\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 参数：\n\t\t\t\t需要一个字符串作为参数，这个字符串将会作为连接符来连接数组中的元素\n\t\t\t\t如果不指定连接符则默认使用\n\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sort")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 可以对一个数组中的内容进行排序，默认是按照Unicode编码进行排序\n\t\t\t\t调用以后，会直接修改原数组。\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 可以自己指定排序的规则，需要一个回调函数作为参数：\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("b")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\t\n\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//升序排列")]),t._v("\n\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//return a-b;")]),t._v("\n\t\t\t\t\n\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//降序排列")]),t._v("\n\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t\t\t\n\t三、遍历数组\n\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 遍历数组就是将数组中元素都获取到\n\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 一般情况我们都是使用"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v("循环来遍历数组：\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("数组"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//数组[i]")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t\t\n\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("使用forEach")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("方法来遍历数组（不兼容"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("IE8")]),t._v("）\n\t\t\n\t\t\t数组"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("forEach")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("value "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" index "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" obj")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("forEach")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("方法需要一个回调函数作为参数，\n\t\t\t\t数组中有几个元素，回调函数就会被调用几次，\n\t\t\t\t每次调用时，都会将遍历到的信息以实参的形式传递进来，\n\t\t\t\t我们可以定义形参来获取这些信息。\n\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("value")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("正在遍历的元素\n\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("index")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("正在遍历元素的索引\n\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("obj")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("被遍历对象\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br"),a("span",{staticClass:"line-number"},[t._v("27")]),a("br"),a("span",{staticClass:"line-number"},[t._v("28")]),a("br"),a("span",{staticClass:"line-number"},[t._v("29")]),a("br"),a("span",{staticClass:"line-number"},[t._v("30")]),a("br"),a("span",{staticClass:"line-number"},[t._v("31")]),a("br"),a("span",{staticClass:"line-number"},[t._v("32")]),a("br"),a("span",{staticClass:"line-number"},[t._v("33")]),a("br"),a("span",{staticClass:"line-number"},[t._v("34")]),a("br"),a("span",{staticClass:"line-number"},[t._v("35")]),a("br"),a("span",{staticClass:"line-number"},[t._v("36")]),a("br"),a("span",{staticClass:"line-number"},[t._v("37")]),a("br"),a("span",{staticClass:"line-number"},[t._v("38")]),a("br"),a("span",{staticClass:"line-number"},[t._v("39")]),a("br"),a("span",{staticClass:"line-number"},[t._v("40")]),a("br"),a("span",{staticClass:"line-number"},[t._v("41")]),a("br"),a("span",{staticClass:"line-number"},[t._v("42")]),a("br"),a("span",{staticClass:"line-number"},[t._v("43")]),a("br"),a("span",{staticClass:"line-number"},[t._v("44")]),a("br"),a("span",{staticClass:"line-number"},[t._v("45")]),a("br"),a("span",{staticClass:"line-number"},[t._v("46")]),a("br"),a("span",{staticClass:"line-number"},[t._v("47")]),a("br"),a("span",{staticClass:"line-number"},[t._v("48")]),a("br"),a("span",{staticClass:"line-number"},[t._v("49")]),a("br"),a("span",{staticClass:"line-number"},[t._v("50")]),a("br"),a("span",{staticClass:"line-number"},[t._v("51")]),a("br"),a("span",{staticClass:"line-number"},[t._v("52")]),a("br"),a("span",{staticClass:"line-number"},[t._v("53")]),a("br"),a("span",{staticClass:"line-number"},[t._v("54")]),a("br"),a("span",{staticClass:"line-number"},[t._v("55")]),a("br"),a("span",{staticClass:"line-number"},[t._v("56")]),a("br"),a("span",{staticClass:"line-number"},[t._v("57")]),a("br"),a("span",{staticClass:"line-number"},[t._v("58")]),a("br"),a("span",{staticClass:"line-number"},[t._v("59")]),a("br"),a("span",{staticClass:"line-number"},[t._v("60")]),a("br"),a("span",{staticClass:"line-number"},[t._v("61")]),a("br"),a("span",{staticClass:"line-number"},[t._v("62")]),a("br"),a("span",{staticClass:"line-number"},[t._v("63")]),a("br"),a("span",{staticClass:"line-number"},[t._v("64")]),a("br"),a("span",{staticClass:"line-number"},[t._v("65")]),a("br"),a("span",{staticClass:"line-number"},[t._v("66")]),a("br"),a("span",{staticClass:"line-number"},[t._v("67")]),a("br"),a("span",{staticClass:"line-number"},[t._v("68")]),a("br"),a("span",{staticClass:"line-number"},[t._v("69")]),a("br"),a("span",{staticClass:"line-number"},[t._v("70")]),a("br"),a("span",{staticClass:"line-number"},[t._v("71")]),a("br"),a("span",{staticClass:"line-number"},[t._v("72")]),a("br"),a("span",{staticClass:"line-number"},[t._v("73")]),a("br"),a("span",{staticClass:"line-number"},[t._v("74")]),a("br"),a("span",{staticClass:"line-number"},[t._v("75")]),a("br"),a("span",{staticClass:"line-number"},[t._v("76")]),a("br"),a("span",{staticClass:"line-number"},[t._v("77")]),a("br"),a("span",{staticClass:"line-number"},[t._v("78")]),a("br"),a("span",{staticClass:"line-number"},[t._v("79")]),a("br"),a("span",{staticClass:"line-number"},[t._v("80")]),a("br"),a("span",{staticClass:"line-number"},[t._v("81")]),a("br"),a("span",{staticClass:"line-number"},[t._v("82")]),a("br"),a("span",{staticClass:"line-number"},[t._v("83")]),a("br"),a("span",{staticClass:"line-number"},[t._v("84")]),a("br"),a("span",{staticClass:"line-number"},[t._v("85")]),a("br"),a("span",{staticClass:"line-number"},[t._v("86")]),a("br"),a("span",{staticClass:"line-number"},[t._v("87")]),a("br"),a("span",{staticClass:"line-number"},[t._v("88")]),a("br"),a("span",{staticClass:"line-number"},[t._v("89")]),a("br"),a("span",{staticClass:"line-number"},[t._v("90")]),a("br"),a("span",{staticClass:"line-number"},[t._v("91")]),a("br"),a("span",{staticClass:"line-number"},[t._v("92")]),a("br"),a("span",{staticClass:"line-number"},[t._v("93")]),a("br"),a("span",{staticClass:"line-number"},[t._v("94")]),a("br"),a("span",{staticClass:"line-number"},[t._v("95")]),a("br"),a("span",{staticClass:"line-number"},[t._v("96")]),a("br"),a("span",{staticClass:"line-number"},[t._v("97")]),a("br"),a("span",{staticClass:"line-number"},[t._v("98")]),a("br"),a("span",{staticClass:"line-number"},[t._v("99")]),a("br"),a("span",{staticClass:"line-number"},[t._v("100")]),a("br"),a("span",{staticClass:"line-number"},[t._v("101")]),a("br"),a("span",{staticClass:"line-number"},[t._v("102")]),a("br")])]),a("h2",{attrs:{id:"_5、包装类、常用方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5、包装类、常用方法"}},[t._v("#")]),t._v(" 5、包装类、常用方法")]),t._v(" "),a("h3",{attrs:{id:"_5-1、包装类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-1、包装类"}},[t._v("#")]),t._v(" 5.1、包装类")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 在"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JS")]),t._v("中为我们提供了三个包装类：\n\t\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Boolean")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 通过这三个包装类可以创建基本数据类型的对象\n\t\t例子：\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" num "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" bool "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Boolean")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 但是在实际应用中千万不要这么干。\n\t\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 当我们去操作一个基本数据类型的属性和方法时，\n\t\t解析器会临时将其转换为对应的包装类，然后再去操作属性和方法，\n\t\t操作完成以后再将这个临时对象进行销毁。\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br")])]),a("h3",{attrs:{id:"_5-2、常用方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-2、常用方法"}},[t._v("#")]),t._v(" 5.2、常用方法")]),t._v(" "),a("h4",{attrs:{id:"_5-2-1、字符串的相关的方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-1、字符串的相关的方法"}},[t._v("#")]),t._v(" 5.2.1、字符串的相关的方法")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("\tlength\n\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 获取字符串的长度\n\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("charAt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 根据索引获取指定的字符\n\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("charCodeAt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 根据索引获取指定的字符编码\n\tString"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fromCharCode")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 根据字符编码获取字符\n\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("indexOf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("lastIndexOf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 从一个字符串中检索指定内容\n\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 需要一个字符串作为参数，这个字符串就是要检索的内容，\n\t\t\t如果找到该内容，则会返回其第一次出现的索引，如果没有找到则返回"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("。\n\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 可以指定一个第二个参数，来表示开始查找的位置\n\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("indexOf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("是从前向后找\n\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("lastIndexOf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("是从后向前找\n\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("slice")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 可以从一个字符串中截取指定的内容，并将截取到内容返回，不会影响原变量\n\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 参数：\n\t\t\t第一个：截取开始的位置（包括开始）\n\t\t\t第二个：截取结束的位置（不包括结束）\n\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 可以省略第二个参数，如果省略则一直截取到最后\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 可以传负数，如果是负数则从后往前数\n\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("substr")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t\n\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("和slice")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("基本一致，不同的是它第二个参数不是索引，而是截取的数量\n\t\t\n\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("substring")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("和slice")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("基本一致，不同的是它不能接受负值作为参数，如果设置一个负值，则会自动修正为"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("，\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("substring")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("中如果第二个参数小于第一个，自动调整位置\n\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toLowerCase")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 将字符串转换为小写并返回\n\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toUpperCase")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 将字符串转换为大写并返回\n\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 可以根据指定内容将一个字符串拆分为一个数组\n\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 参数：\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 需要一个字符串作为参数，将会根据字符串去拆分数组\n\t\t\t\t可以接收一个正则表达式，此时会根据正则表达式去拆分数组\n\t\t\t\t\n\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 可以将字符串中和正则表达式匹配的内容提取出来\n\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 参数：\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 正则表达式，可以根据该正则表达式将字符串中符合要求的内容提取出来\n\t\t\t\t\t并且封装到一个数组中返回\n\t\n\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  \n\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 可以将字符串中指定内容替换为新的内容\n\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 参数：\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 第一个：被替换的内容，可以是一个正则表达式\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 第二个：替换的新内容\n\t\t\t\n\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("search")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 可以根据正则表达式去字符串中查找指定的内容\n\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 参数：\n\t\t\t正则表达式，将会根据该表达式查询内容，\n\t\t\t\t\t并且将第一个匹配到的内容的索引返回，如果没有匹配到任何内容，则返回"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("。\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br"),a("span",{staticClass:"line-number"},[t._v("27")]),a("br"),a("span",{staticClass:"line-number"},[t._v("28")]),a("br"),a("span",{staticClass:"line-number"},[t._v("29")]),a("br"),a("span",{staticClass:"line-number"},[t._v("30")]),a("br"),a("span",{staticClass:"line-number"},[t._v("31")]),a("br"),a("span",{staticClass:"line-number"},[t._v("32")]),a("br"),a("span",{staticClass:"line-number"},[t._v("33")]),a("br"),a("span",{staticClass:"line-number"},[t._v("34")]),a("br"),a("span",{staticClass:"line-number"},[t._v("35")]),a("br"),a("span",{staticClass:"line-number"},[t._v("36")]),a("br"),a("span",{staticClass:"line-number"},[t._v("37")]),a("br"),a("span",{staticClass:"line-number"},[t._v("38")]),a("br"),a("span",{staticClass:"line-number"},[t._v("39")]),a("br"),a("span",{staticClass:"line-number"},[t._v("40")]),a("br"),a("span",{staticClass:"line-number"},[t._v("41")]),a("br"),a("span",{staticClass:"line-number"},[t._v("42")]),a("br"),a("span",{staticClass:"line-number"},[t._v("43")]),a("br"),a("span",{staticClass:"line-number"},[t._v("44")]),a("br"),a("span",{staticClass:"line-number"},[t._v("45")]),a("br"),a("span",{staticClass:"line-number"},[t._v("46")]),a("br"),a("span",{staticClass:"line-number"},[t._v("47")]),a("br"),a("span",{staticClass:"line-number"},[t._v("48")]),a("br"),a("span",{staticClass:"line-number"},[t._v("49")]),a("br"),a("span",{staticClass:"line-number"},[t._v("50")]),a("br"),a("span",{staticClass:"line-number"},[t._v("51")]),a("br"),a("span",{staticClass:"line-number"},[t._v("52")]),a("br"),a("span",{staticClass:"line-number"},[t._v("53")]),a("br"),a("span",{staticClass:"line-number"},[t._v("54")]),a("br"),a("span",{staticClass:"line-number"},[t._v("55")]),a("br"),a("span",{staticClass:"line-number"},[t._v("56")]),a("br")])]),a("h4",{attrs:{id:"_5-2-2、正则表达式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-2、正则表达式"}},[t._v("#")]),t._v(" 5.2.2、正则表达式")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 正则用来定义一些字符串的规则，程序可以根据这些规则来判断一个字符串是否符合规则，\n\t\t也可以将一个字符串中符合规则的内容提取出来。\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 创建正则表达式\n\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" reg "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RegExp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"正则"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"匹配模式"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" reg "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("正则表达式"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("匹配模式\n\t\t\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 语法：\n\t\t匹配模式：\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("i")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("忽略大小写\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("g")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("全局匹配模式\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 设置匹配模式时，可以都不设置，也可以设置"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("个，也可以全设置，设置时没有顺序要求\n\t\t\t\n\t\t正则语法\t\t\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" 或\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" 或\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" 除了\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("z"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" 小写字母\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("A")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("Z")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" 大写字母\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("A")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("z"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" 任意字母\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" 任意数字\n\t\t\t\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 方法：\n\t\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 可以用来检查一个字符串是否符合正则表达式\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 如果符合返回"),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("，否则返回"),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n\n\t\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 量词\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" 正好n次\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("m"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" m"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("n次\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("m"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" 至少m次\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("\t至少"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("次 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("次或"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("次 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("次或多次 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t\t\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 转义字符\n\t\t\t\\ 在正则表达式中使用\\作为转义字符\n\t\t\t\\"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" 表示"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n\t\t\t\\\\ 表示\\\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" 表示任意字符\n\t\t\t\\w\n\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 相当于"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("A")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("z0"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("9_"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\t\t\t\\"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("W")]),t._v("\n\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 相当于"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("A")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("z0"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("9_"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\t\t\t\\d\n\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 任意数字\n\t\t\t\\"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("D")]),t._v("\n\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 除了数字\n\t\t\t\\s\n\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 空格\n\t\t\t\\"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("S")]),t._v("\n\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 除了空格\n\t\t\t\\b\n\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 单词边界\n\t\t\t\\"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("B")]),t._v("\n\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 除了单词边界\n\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),t._v(" 表示开始\n\t\t$ 表示结束\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br"),a("span",{staticClass:"line-number"},[t._v("27")]),a("br"),a("span",{staticClass:"line-number"},[t._v("28")]),a("br"),a("span",{staticClass:"line-number"},[t._v("29")]),a("br"),a("span",{staticClass:"line-number"},[t._v("30")]),a("br"),a("span",{staticClass:"line-number"},[t._v("31")]),a("br"),a("span",{staticClass:"line-number"},[t._v("32")]),a("br"),a("span",{staticClass:"line-number"},[t._v("33")]),a("br"),a("span",{staticClass:"line-number"},[t._v("34")]),a("br"),a("span",{staticClass:"line-number"},[t._v("35")]),a("br"),a("span",{staticClass:"line-number"},[t._v("36")]),a("br"),a("span",{staticClass:"line-number"},[t._v("37")]),a("br"),a("span",{staticClass:"line-number"},[t._v("38")]),a("br"),a("span",{staticClass:"line-number"},[t._v("39")]),a("br"),a("span",{staticClass:"line-number"},[t._v("40")]),a("br"),a("span",{staticClass:"line-number"},[t._v("41")]),a("br"),a("span",{staticClass:"line-number"},[t._v("42")]),a("br"),a("span",{staticClass:"line-number"},[t._v("43")]),a("br"),a("span",{staticClass:"line-number"},[t._v("44")]),a("br"),a("span",{staticClass:"line-number"},[t._v("45")]),a("br"),a("span",{staticClass:"line-number"},[t._v("46")]),a("br"),a("span",{staticClass:"line-number"},[t._v("47")]),a("br"),a("span",{staticClass:"line-number"},[t._v("48")]),a("br"),a("span",{staticClass:"line-number"},[t._v("49")]),a("br"),a("span",{staticClass:"line-number"},[t._v("50")]),a("br"),a("span",{staticClass:"line-number"},[t._v("51")]),a("br"),a("span",{staticClass:"line-number"},[t._v("52")]),a("br"),a("span",{staticClass:"line-number"},[t._v("53")]),a("br"),a("span",{staticClass:"line-number"},[t._v("54")]),a("br"),a("span",{staticClass:"line-number"},[t._v("55")]),a("br"),a("span",{staticClass:"line-number"},[t._v("56")]),a("br"),a("span",{staticClass:"line-number"},[t._v("57")]),a("br"),a("span",{staticClass:"line-number"},[t._v("58")]),a("br")])]),a("h4",{attrs:{id:"_5-2-3、date-类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-3、date-类"}},[t._v("#")]),t._v(" 5.2.3、Date 类")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 日期的对象，在"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JS")]),t._v("中通过Date对象来表示一个时间\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 创建对象\n\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 创建一个当前的时间对象\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" d "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Date")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 创建一个指定的时间对象\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" d "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Date")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"月/日/年 时:分:秒"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 方法：\n\t\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getDate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 当前日期对象是几日（"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("31")]),t._v("）\n\t\t\t\n\t\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getDay")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 返回当前日期对象时周几（"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v("）\n\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" 周日\n\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" 周一 。。。\n\t\t\t\t\n\t\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getMonth")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 返回当前日期对象的月份（"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),t._v("）\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" 一月 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" 二月 。。。\n\t\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getFullYear")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 从 Date 对象以四位数字返回年份。 \n\t\t\n\t\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getHours")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 返回 Date "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("对象的小时")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("23")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("。 \n\t\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getMinutes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 返回 Date "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("对象的分钟")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("59")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("。 \n\t\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getSeconds")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 返回 Date "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("对象的秒数")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("59")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("。 \n\t\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getMilliseconds")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 返回 Date "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("对象的毫秒")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("999")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("。 \n\t\t\n\t\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getTime")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 返回当前日期对象的时间戳\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 时间戳，指的是从"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1970")]),t._v("年月"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("日 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("时"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("分"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("秒，到现在时间的毫秒数\n\t\t\t\t计算机底层保存时间都是以时间戳的形式保存的。\n\t\t\t\t\n\t\tDate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("now")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 可以获取当前代码执行时的时间戳\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br"),a("span",{staticClass:"line-number"},[t._v("27")]),a("br"),a("span",{staticClass:"line-number"},[t._v("28")]),a("br"),a("span",{staticClass:"line-number"},[t._v("29")]),a("br"),a("span",{staticClass:"line-number"},[t._v("30")]),a("br"),a("span",{staticClass:"line-number"},[t._v("31")]),a("br"),a("span",{staticClass:"line-number"},[t._v("32")]),a("br"),a("span",{staticClass:"line-number"},[t._v("33")]),a("br")])]),a("h4",{attrs:{id:"_5-2-4、math-类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-4、math-类"}},[t._v("#")]),t._v(" 5.2.4、Math 类")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" Math属于一个工具类，它不需要我们创建对象，它里边封装了属性运算相关的常量和方法\n\t\t我们可以直接使用它来进行数学运算相关的操作\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 方法：\n\t\tMath"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("PI")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 常量，圆周率\n\t\tMath"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("abs")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 绝对值运算\n\t\tMath"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ceil")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 向上取整\n\t\tMath"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("floor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 向下取整\n\t\tMath"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("round")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 四舍五入取整\n\t\tMath"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("random")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 生成一个"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("之间的随机数\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 生成一个x"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("y之间的随机数\n\t\t\t\tMath"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("round")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Math"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("random")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("y"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\tMath"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("pow")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("y"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 求x的y次幂\n\t\tMath"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sqrt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 对一个数进行开方\n\t\tMath"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("max")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 求多个数中最大值\n\t\tMath"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("min")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 求多个数中的最小值\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br")])]),a("h2",{attrs:{id:"_6、嵌入方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6、嵌入方式"}},[t._v("#")]),t._v(" 6、嵌入方式")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),t._v(" 行内：写到标签的事件属性中：结构与行为相耦合，不建议使用\n\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" onclick"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"alert('Hello js');\"")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.")]),t._v(" 内部：书写在"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("script"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("标签中\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.")]),t._v(" 外部：书写xxx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("js中\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" 使用"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("script src"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"路径"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("标签引入外部js文件，注意一旦"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("script"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("标签\n\t  中存在src属性，此时该标签的作用为：引入外部js，不能在该标签中书写js代码。\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4.")]),t._v(" 页面加载是从上至下进行，也可以将"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("script"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("写到要操作的标签下面，不是很好的解决方案\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])]),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("onload"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("当前文档完全加载后执行。\n\t\t\t\t\t\t即使有图片、音频、视频等资源，先等待资源加载后，才会触发函数。\nwindow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("onload在整个文档中，只能书写一次。书写多次，后面会覆盖前面代码。\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("h2",{attrs:{id:"_7、dom"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7、dom"}},[t._v("#")]),t._v(" 7、DOM")]),t._v(" "),a("blockquote",[a("ul",[a("li",[a("p",[a("strong",[t._v("Document Object Model（文档对象模型）")]),t._v("：将整个文档封装成对象，以对象模型的方式进行操作。")])]),t._v(" "),a("li",[a("ul",[a("li",[t._v("文档对象模型，通过 DOM 可以来任意来修改网页中各个内容")]),t._v(" "),a("li",[t._v("文档")])])]),t._v(" "),a("li",[a("ul",[a("li",[a("ul",[a("li",[t._v("文档指的是网页，一个网页就是一个文档")])])])])]),t._v(" "),a("li",[a("ul",[a("li",[t._v("对象")])])]),t._v(" "),a("li",[a("ul",[a("li",[a("ul",[a("li",[t._v("对象指将网页中的每一个节点都转换为对象\n转换完对象以后，就可以以一种纯面向对象的形式来操作网页了")])])])])]),t._v(" "),a("li",[a("ul",[a("li",[t._v("模型")])])]),t._v(" "),a("li",[a("ul",[a("li",[a("ul",[a("li",[t._v("模型用来表示节点和节点之间的关系，方便操作页面")])])])])]),t._v(" "),a("li",[a("ul",[a("li",[t._v("节点（Node）")])])]),t._v(" "),a("li",[a("ul",[a("li",[a("ul",[a("li",[t._v("节点是构成网页的最基本的单元，网页中的每一个部分都可以称为是一个节点")]),t._v(" "),a("li",[t._v("虽然都是节点，但是节点的类型却是不同的")])])])])]),t._v(" "),a("li",[a("ul",[a("li",[a("ul",[a("li",[t._v("常用的节点")])])])])]),t._v(" "),a("li",[a("ul",[a("li",[a("ul",[a("li",[a("ul",[a("li",[t._v("文档节点 （Document），代表整个网页")]),t._v(" "),a("li",[t._v("元素节点（Element），代表网页中的标签")])])])])])])]),t._v(" "),a("li",[a("ul",[a("li",[a("ul",[a("li",[a("ul",[a("li",[t._v("属性节点（Attribute），代表标签中的属性")]),t._v(" "),a("li",[t._v("文本节点（Text），代表网页中的文本内容")])])])])])])])])]),t._v(" "),a("h3",{attrs:{id:"_7-1、dom-操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-1、dom-操作"}},[t._v("#")]),t._v(" 7.1、DOM 操作")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DOM")]),t._v("查询\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 在网页中浏览器已经为我们提供了document对象，\n\t它代表的是整个网页，它是window对象的属性，可以在页面中直接使用。\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" document查询方法：\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 根据元素的id属性查询一个元素节点对象：\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"id属性值"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 根据元素的name属性值查询一组元素节点对象"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementsByName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"name属性值"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 根据标签名来查询一组元素节点对象：\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementsByTagName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"标签名"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 元素的属性：\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 读取元素的属性：\n\t语法：元素"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("属性名\n\t例子：ele"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name  \n\t\tele"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id  \n\t\tele"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value \n\t\tele"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("className\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 修改元素的属性：\n\t语法：元素"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("属性名 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" 属性值\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" innerHTML\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 使用该属性可以获取或设置元素内部的"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HTML")]),t._v("代码\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br")])]),a("h3",{attrs:{id:"_7-2、事件-event"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-2、事件-event"}},[t._v("#")]),t._v(" 7.2、事件（Event）")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 事件指的是用户和浏览器之间的交互行为。比如：点击按钮、关闭窗口、鼠标移动。。。\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 我们可以为事件来绑定回调函数来响应事件。\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 绑定事件的方式：\n\t"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),t._v("可以在标签的事件属性中设置相应的"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JS")]),t._v("代码\n\t\t例子：\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("button οnclick"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"js代码。。。"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("按钮"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("button"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.")]),t._v("可以通过为对象的指定事件属性设置回调函数的形式来处理事件\n\t\t例子：\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("button id"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"btn"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("按钮"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("button"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("script"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" btn "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"btn"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t\tbtn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onclick")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("script"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 事件对象\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 当响应函数被调用时，浏览器每次都会将一个事件对象作为实参传递进响应函数中，\n\t\t这个事件对象中封装了当前事件的相关信息，比如：鼠标的坐标，键盘的按键，鼠标的按键，滚轮的方向。。\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 可以在响应函数中定义一个形参，来使用事件对象，但是在"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("IE8")]),t._v("以下浏览器中事件对象没有做完实参传递，而是作为window对象的属性保存\n\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 例子：\n\t\t\t元素"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("事件")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("event")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\tevent "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" event "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t\t\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t\n\t\t\t元素"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("事件")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("e")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\te "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" e "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t\t\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 事件的冒泡（Bubble）\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 事件的冒泡指的是事件向上传导，当后代元素上的事件被触发时，将会导致其祖先元素上的同类事件也会触发。\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 事件的冒泡大部分情况下都是有益的，如果需要取消冒泡，则需要使用事件对象来取消\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 可以将事件对象的cancelBubble设置为"),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("，即可取消冒泡\n\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 例子：\n\t\t\t\t元素"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("事件")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("event")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\t\tevent "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" event "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t\t\tevent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cancelBubble "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br"),a("span",{staticClass:"line-number"},[t._v("27")]),a("br"),a("span",{staticClass:"line-number"},[t._v("28")]),a("br"),a("span",{staticClass:"line-number"},[t._v("29")]),a("br"),a("span",{staticClass:"line-number"},[t._v("30")]),a("br"),a("span",{staticClass:"line-number"},[t._v("31")]),a("br"),a("span",{staticClass:"line-number"},[t._v("32")]),a("br"),a("span",{staticClass:"line-number"},[t._v("33")]),a("br"),a("span",{staticClass:"line-number"},[t._v("34")]),a("br"),a("span",{staticClass:"line-number"},[t._v("35")]),a("br"),a("span",{staticClass:"line-number"},[t._v("36")]),a("br"),a("span",{staticClass:"line-number"},[t._v("37")]),a("br"),a("span",{staticClass:"line-number"},[t._v("38")]),a("br"),a("span",{staticClass:"line-number"},[t._v("39")]),a("br")])]),a("h3",{attrs:{id:"_7-3、文档的加载"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-3、文档的加载"}},[t._v("#")]),t._v(" 7.3、文档的加载")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 浏览器在加载一个页面时，是按照自上向下的顺序加载的，加载一行执行一行。\n\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 如果将js代码编写到页面的上边，当代码执行时，页面中的"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DOM")]),t._v("对象还没有加载，\n\t\t\t此时将会无法正常获取到"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DOM")]),t._v("对象，导致"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DOM")]),t._v("操作失败。\n\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 解决方式一：\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 可以将js代码编写到body的下边\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("body"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("button id"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"btn"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("按钮"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("button"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("script"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" btn "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"btn"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t\t\tbtn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onclick")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\t\t\n\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("script"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("body"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\t\t\t\n\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 解决方式二：\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 将js代码编写到window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onload")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("中\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("onload 对应的回调函数会在整个页面加载完毕以后才执行，\n\t\t\t\t所以可以确保代码执行时，"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DOM")]),t._v("对象已经加载完毕了\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("script"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\t\t\t\twindow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onload")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" btn "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"btn"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t\t\tbtn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onclick")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\t\t\n\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("script"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br"),a("span",{staticClass:"line-number"},[t._v("27")]),a("br"),a("span",{staticClass:"line-number"},[t._v("28")]),a("br")])]),a("h3",{attrs:{id:"_7-4、dom-查询"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-4、dom-查询"}},[t._v("#")]),t._v(" 7.4、DOM 查询")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 通过具体的元素节点来查询\n\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 元素"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementsByTagName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 通过标签名查询当前元素的指定后代元素\n\t\t\t\n\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 元素"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("childNodes\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 获取当前元素的所有子节点\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 会获取到空白的文本子节点\n\t\t\n\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 元素"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("children\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 获取当前元素的所有子元素\n\t\t\n\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 元素"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("firstChild\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 获取当前元素的第一个子节点\n\t\t\n\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 元素"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lastChild\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 获取当前元素的最后一个子节点\n\t\t\n\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 元素"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("parentNode\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 获取当前元素的父元素\n\t\t\n\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 元素"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("previousSibling\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 获取当前元素的前一个兄弟节点\n\t\t\n\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 元素"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("nextSibling\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 获取当前元素的后一个兄弟节点\n\t\t\t\n\tinnerHTML和innerText\n\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 这两个属性并没有在"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DOM")]),t._v("标准定义，但是大部分浏览器都支持这两个属性\n\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 两个属性作用类似，都可以获取到标签内部的内容，\n\t\t\t不同是innerHTML会获取到html标签，而innerText会自动去除标签\n\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 如果使用这两个属性来设置标签内部的内容时，没有任何区别的\t\n\t\t\n\t读取标签内部的文本内容\n\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("h1"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("h1中的文本内容"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("h1"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\t\t元素"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("firstChild"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("nodeValue\n\t\t\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" document对象的其他的属性和方法\n\t\tdocument"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("all\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 获取页面中的所有元素，相当于document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementsByTagName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"*"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t\n\t\tdocument"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("documentElement\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 获取页面中html根元素\n\t\t\t\n\t\tdocument"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 获取页面中的body元素\n\t\t\t\n\t\tdocument"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementsByClassName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 根据元素的"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v("属性值查询一组元素节点对象\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 这个方法不支持"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("IE8")]),t._v("及以下的浏览器\n\t\t\t\n\t\tdocument"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("querySelector")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 根据"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CSS")]),t._v("选择器去页面中查询一个元素\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 如果匹配到的元素有多个，则它会返回查询到的第一个元素\t\n\t\t\t\n\t\tdocument"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("querySelectorAll")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 根据"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CSS")]),t._v("选择器去页面中查询一组元素\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 会将匹配到所有元素封装到一个数组中返回，即使只匹配到一个\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br"),a("span",{staticClass:"line-number"},[t._v("27")]),a("br"),a("span",{staticClass:"line-number"},[t._v("28")]),a("br"),a("span",{staticClass:"line-number"},[t._v("29")]),a("br"),a("span",{staticClass:"line-number"},[t._v("30")]),a("br"),a("span",{staticClass:"line-number"},[t._v("31")]),a("br"),a("span",{staticClass:"line-number"},[t._v("32")]),a("br"),a("span",{staticClass:"line-number"},[t._v("33")]),a("br"),a("span",{staticClass:"line-number"},[t._v("34")]),a("br"),a("span",{staticClass:"line-number"},[t._v("35")]),a("br"),a("span",{staticClass:"line-number"},[t._v("36")]),a("br"),a("span",{staticClass:"line-number"},[t._v("37")]),a("br"),a("span",{staticClass:"line-number"},[t._v("38")]),a("br"),a("span",{staticClass:"line-number"},[t._v("39")]),a("br"),a("span",{staticClass:"line-number"},[t._v("40")]),a("br"),a("span",{staticClass:"line-number"},[t._v("41")]),a("br"),a("span",{staticClass:"line-number"},[t._v("42")]),a("br"),a("span",{staticClass:"line-number"},[t._v("43")]),a("br"),a("span",{staticClass:"line-number"},[t._v("44")]),a("br"),a("span",{staticClass:"line-number"},[t._v("45")]),a("br"),a("span",{staticClass:"line-number"},[t._v("46")]),a("br"),a("span",{staticClass:"line-number"},[t._v("47")]),a("br"),a("span",{staticClass:"line-number"},[t._v("48")]),a("br"),a("span",{staticClass:"line-number"},[t._v("49")]),a("br"),a("span",{staticClass:"line-number"},[t._v("50")]),a("br"),a("span",{staticClass:"line-number"},[t._v("51")]),a("br"),a("span",{staticClass:"line-number"},[t._v("52")]),a("br"),a("span",{staticClass:"line-number"},[t._v("53")]),a("br"),a("span",{staticClass:"line-number"},[t._v("54")]),a("br"),a("span",{staticClass:"line-number"},[t._v("55")]),a("br"),a("span",{staticClass:"line-number"},[t._v("56")]),a("br"),a("span",{staticClass:"line-number"},[t._v("57")]),a("br")])]),a("h3",{attrs:{id:"_7-5、dom-修改"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-5、dom-修改"}},[t._v("#")]),t._v(" 7.5、DOM 修改")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createElement")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 可以根据标签名创建一个元素节点对象\n\t\t\n\tdocument"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createTextNode")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 可以根据文本内容创建一个文本节点对象\n\t\t\n\t父节点"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("appendChild")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("子节点"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 向父节点中添加指定的子节点\n\t\t\n\t父节点"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("insertBefore")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("新节点"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("旧节点"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 将一个新的节点插入到旧节点的前边\n\t\t\n\t父节点"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("replaceChild")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("新节点"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("旧节点"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 使用一个新的节点去替换旧节点\n\t\t\n\t父节点"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("removeChild")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("子节点"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 删除指定的子节点\n\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 推荐方式：子节点"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("parentNode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("removeChild")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("子节点"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br")])]),a("h3",{attrs:{id:"_7-6、dom-对-css-的操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-6、dom-对-css-的操作"}},[t._v("#")]),t._v(" 7.6、DOM 对 CSS 的操作")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 读取和修改内联样式\n\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 使用style属性来操作元素的内联样式\n\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 读取内联样式：\n\t\t\t语法：元素"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("样式名\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 例子：\n\t\t\t\t元素"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("width\n\t\t\t\t元素"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("height\n\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 注意：如果样式名中带有"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("，则需要将样式名修改为驼峰命名法\n\t\t\t\t\t将"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("去掉，然后"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("后的字母改大写\n\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 比如：background"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("color "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" backgroundColor\n\t\t\t\t\t\tborder"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("width "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" borderWidth\n\t\t\t\t\t\t\n\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 修改内联样式：\n\t\t\t语法：元素"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("样式名 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" 样式值\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 通过style修改的样式都是内联样式，由于内联样式的优先级比较高，\n\t\t\t\t所以我们通过"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JS")]),t._v("来修改的样式，往往会立即生效，\n\t\t\t\t但是如果样式中设置了"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("important，则内联样式将不会生效。\n\t\t\t\t\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 读取元素的当前样式\n\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 正常浏览器\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("使用getComputedStyle")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 这个方法是window对象的方法，可以返回一个对象，这个对象中保存着当前元素生效样式\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 参数：\n\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),t._v("要获取样式的元素\n\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.")]),t._v("可以传递一个伪元素，一般传"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 例子：\n\t\t\t\t获取元素的宽度\n\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getComputedStyle")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("box "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"width"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 通过该方法读取到样式都是只读的不能修改\n\n\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("IE8")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 使用currentStyle\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 语法：\n\t\t\t\t元素"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("currentStyle"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("样式名\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 例子：\n\t\t\t\tbox"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("currentStyle"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"width"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 通过这个属性读取到的样式是只读的不能修改\n\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 其他的样式相关的属性\n\t\t注意：以下样式都是只读的\n\t\n\t\tclientHeight\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 元素的可见高度，指元素的内容区和内边距的高度\n\t\tclientWidth\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 元素的可见宽度，指元素的内容区和内边距的宽度\n\t\toffsetHeight\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 整个元素的高度，包括内容区、内边距、边框\n\t\tofffsetWidth\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 整个元素的宽度，包括内容区、内边距、边框\n\t\toffsetParent\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 当前元素的定位父元素\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 离他最近的开启了定位的祖先元素，如果所有的元素都没有开启定位，则返回body\n\t\toffsetLeft\n\t\toffsetTop\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 当前元素和定位父元素之间的偏移量\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" offsetLeft水平偏移量  offsetTop垂直偏移量\n\t\t\n\t\tscrollHeight\n\t\tscrollWidth\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 获取元素滚动区域的高度和宽度\n\t\t\n\t\tscrollTop\n\t\tscrollLeft\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 获取元素垂直和水平滚动条滚动的距离\n\t\t\t\n\t\t判断滚动条是否滚动到底\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 垂直滚动条\n\t\t\t\tscrollHeight "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" scrollTop "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" clientHeight\n\t\t\t\t\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 水平滚动\t\n\t\t\t\tscrollWidth "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" scrollLeft "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" clientWidth\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br"),a("span",{staticClass:"line-number"},[t._v("27")]),a("br"),a("span",{staticClass:"line-number"},[t._v("28")]),a("br"),a("span",{staticClass:"line-number"},[t._v("29")]),a("br"),a("span",{staticClass:"line-number"},[t._v("30")]),a("br"),a("span",{staticClass:"line-number"},[t._v("31")]),a("br"),a("span",{staticClass:"line-number"},[t._v("32")]),a("br"),a("span",{staticClass:"line-number"},[t._v("33")]),a("br"),a("span",{staticClass:"line-number"},[t._v("34")]),a("br"),a("span",{staticClass:"line-number"},[t._v("35")]),a("br"),a("span",{staticClass:"line-number"},[t._v("36")]),a("br"),a("span",{staticClass:"line-number"},[t._v("37")]),a("br"),a("span",{staticClass:"line-number"},[t._v("38")]),a("br"),a("span",{staticClass:"line-number"},[t._v("39")]),a("br"),a("span",{staticClass:"line-number"},[t._v("40")]),a("br"),a("span",{staticClass:"line-number"},[t._v("41")]),a("br"),a("span",{staticClass:"line-number"},[t._v("42")]),a("br"),a("span",{staticClass:"line-number"},[t._v("43")]),a("br"),a("span",{staticClass:"line-number"},[t._v("44")]),a("br"),a("span",{staticClass:"line-number"},[t._v("45")]),a("br"),a("span",{staticClass:"line-number"},[t._v("46")]),a("br"),a("span",{staticClass:"line-number"},[t._v("47")]),a("br"),a("span",{staticClass:"line-number"},[t._v("48")]),a("br"),a("span",{staticClass:"line-number"},[t._v("49")]),a("br"),a("span",{staticClass:"line-number"},[t._v("50")]),a("br"),a("span",{staticClass:"line-number"},[t._v("51")]),a("br"),a("span",{staticClass:"line-number"},[t._v("52")]),a("br"),a("span",{staticClass:"line-number"},[t._v("53")]),a("br"),a("span",{staticClass:"line-number"},[t._v("54")]),a("br"),a("span",{staticClass:"line-number"},[t._v("55")]),a("br"),a("span",{staticClass:"line-number"},[t._v("56")]),a("br"),a("span",{staticClass:"line-number"},[t._v("57")]),a("br"),a("span",{staticClass:"line-number"},[t._v("58")]),a("br"),a("span",{staticClass:"line-number"},[t._v("59")]),a("br"),a("span",{staticClass:"line-number"},[t._v("60")]),a("br"),a("span",{staticClass:"line-number"},[t._v("61")]),a("br"),a("span",{staticClass:"line-number"},[t._v("62")]),a("br"),a("span",{staticClass:"line-number"},[t._v("63")]),a("br"),a("span",{staticClass:"line-number"},[t._v("64")]),a("br"),a("span",{staticClass:"line-number"},[t._v("65")]),a("br"),a("span",{staticClass:"line-number"},[t._v("66")]),a("br"),a("span",{staticClass:"line-number"},[t._v("67")]),a("br"),a("span",{staticClass:"line-number"},[t._v("68")]),a("br"),a("span",{staticClass:"line-number"},[t._v("69")]),a("br"),a("span",{staticClass:"line-number"},[t._v("70")]),a("br"),a("span",{staticClass:"line-number"},[t._v("71")]),a("br")])]),a("h2",{attrs:{id:"_8、事件名解释"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8、事件名解释"}},[t._v("#")]),t._v(" 8、事件名解释")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("鼠标事件：\n\n    右键点击： oncontextmenu\n    左键单击： onclick\n    鼠标左键双击： ondblclick\n    某个鼠标键被按下： onmousedown\n    某个鼠标键被松开： onmouseup\n    移动事件： onmousemove\n    移入事件： onmouseover（"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("PS")]),t._v("：有事件冒泡，即从后代元素上移动经过，会重复触发事件）\n    移出事件： onmouseout\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("移入事件：onmouseenter")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("PS")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("无事件冒泡，即从后代元素上移动经过，不会重复触发事件"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    移出事件： onmouseleave\n\n键盘事件：\n\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("onkeydown")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 某个键盘的键被按下\n    onkeypress：某个键盘的键被按下或按住\n    onkeyup：某个键盘的键被松开\n\nInput事件：\n\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("onchange")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("用户改变域的内容\n    oninput： 输入框事件\n    onsubmit：表单提交事件\n    onselect：文本被选定\n\n全局事件：\n\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("onfocus")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("元素获得焦点\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("onblur")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("元素失去焦点\n    onload：某个页面或图像被完成加载\n    onresize：窗口或框架被调整尺寸\n    onunload：用户退出页面\n    onreset：重置按钮被点击\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("onerror")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("当加载文档或图像时发生某个错误\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("onabort")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("图像加载被中断\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("oncopy")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 复制事件\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("onpaste")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 粘贴事件\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("oncut")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 剪切事件\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("onbeforeunload")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 浏览器刷新事件会触发\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br"),a("span",{staticClass:"line-number"},[t._v("27")]),a("br"),a("span",{staticClass:"line-number"},[t._v("28")]),a("br"),a("span",{staticClass:"line-number"},[t._v("29")]),a("br"),a("span",{staticClass:"line-number"},[t._v("30")]),a("br"),a("span",{staticClass:"line-number"},[t._v("31")]),a("br"),a("span",{staticClass:"line-number"},[t._v("32")]),a("br"),a("span",{staticClass:"line-number"},[t._v("33")]),a("br"),a("span",{staticClass:"line-number"},[t._v("34")]),a("br"),a("span",{staticClass:"line-number"},[t._v("35")]),a("br"),a("span",{staticClass:"line-number"},[t._v("36")]),a("br"),a("span",{staticClass:"line-number"},[t._v("37")]),a("br"),a("span",{staticClass:"line-number"},[t._v("38")]),a("br"),a("span",{staticClass:"line-number"},[t._v("39")]),a("br"),a("span",{staticClass:"line-number"},[t._v("40")]),a("br")])])])}),[],!1,null,null,null);s.default=r.exports}}]);